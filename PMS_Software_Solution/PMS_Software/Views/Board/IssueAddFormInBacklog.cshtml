@using Entities.ProjectEntities;
@using ServiceContracts.DTO.BoardDTO;
@model BacklogAddRequest
@{
    IEnumerable<Board> boards = ViewData["boards"] as IEnumerable<Board>;
    var boardId =(Guid)ViewData["boardId"];
    var board = boards.FirstOrDefault(b => b.Id == boardId);
    var sprints =(ICollection<Sprint>) ViewData["sprints"];
}
<form asp-controller="Board" asp-action="CreateBacklog" method="post">
    <input type="hidden" asp-for="ProjectId" value="@board.ProjectId" />
    <input type="hidden" asp-for="BoardId" value="@board.Id" />
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="d-flex">
        <select  asp-for="IssueType" asp-items="new SelectList(Enum.GetValues(typeof(ServiceContracts.Enums.IssueTypeOption)))">
        </select>
        <input class="form-control" asp-for="Description"  style="width:100%" />
    </div>
    <div class="d-flex justify-content-between mt-2">
        <div class="d-flex">
            <small>New Bug In</small>
            <small class="ml-2">
                <select  asp-for="SprintId">
                    <option value="Bug">Backlog</option>
                    @foreach (var sprint in sprints)
                    {
                        <option value="@sprint.Id">@sprint.Name</option>
                    }
                </select>
            </small>
        </div>
        <div class="d-flex">
            <small>
                <input class="btn btn-success" type="submit" value="Create" />
                <button class="btn btn-danger" type="reset">Cancel</button>
            </small>
        </div>
    </div>
    <span asp-validation-for="Description"></span>
</form>

